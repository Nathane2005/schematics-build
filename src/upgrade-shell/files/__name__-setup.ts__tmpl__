import {Directive, ElementRef, Injector} from '@angular/core';
import {setAngularLib, UpgradeComponent, downgradeComponent} from '@angular/upgrade/static';
import * as angular from 'angular'; // replace with const angular = (<any>window).angular; if Angular is available globally

import '<%= angularJsImport %>'; // import your application files here.
if (! angular.module('<%= angularJsModule %>')) {
  throw new Error('"<%= angularJsModule %>" is not loaded');
}


// all components downgraded from Angular to AngularJS go here
import {<%= bootstrapComponentClassName %>} from "./<%= bootstrapComponentFileName %>";
angular.module('downgraded', []).
  directive('appRoot', downgradeComponent({component: <%= bootstrapComponentClassName %>}));


<% if (angularJsCmpSelector) { %>
// all components upgraded from AngularJS to Angular go here
@Directive({selector: '<%= angularJsCmpSelector %>'})
export class <%= className %>Component extends UpgradeComponent {
  constructor(ref: ElementRef, inj: Injector) {
    super('<%= angularJsCmpSelector %>', ref, inj);
  }
}
export const upgradedComponents = [<%= className %>Component];
<% } %>
<% if (!angularJsCmpSelector) { %>
export const upgradedComponents = [];
<% } %>



// additional configuration invoked right before bootstrap
export function configure<%= className %>(i: Injector) {
  setAngularLib(angular);
  //  Insert additional configuration here
}
